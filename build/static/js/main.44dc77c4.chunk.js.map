{"version":3,"sources":["context/context.js","components/home/IconBoard.js","components/reusable/Rules.js","components/home/HomePage.js","components/lobby/LobbyUsers.js","components/lobby/LobbyPage.js","components/game/Board.js","theme.js","context/reducers.js","context/GlobalState.js","App.js","index.js"],"names":["React","createContext","useStyles","makeStyles","theme","root","display","justifyContent","alignItems","flexDirection","canvas","height","width","borderRadius","border","borderColor","text","marginBottom","spacing","IconBoard","setIcon","classes","canvasRef","useRef","useEffect","current","context","getContext","color","drawing","drawLine","x0","y0","x1","y1","bounds","getBoundingClientRect","mousex0","mousex1","mousey0","mousey1","left","top","beginPath","moveTo","lineTo","lineWidth","stroke","closePath","dataURL","toDataURL","onMouseDown","e","x","clientX","touches","y","clientY","onMouseMove","console","log","onMouseUp","changedTouches","throttle","callback","delay","previousCall","Date","getTime","time","apply","arguments","addEventListener","onResize","window","innerWidth","innerHeight","style","className","Typography","ref","aria-label","rules","position","right","closeButton","helpButton","dialog","margin","Rules","useState","open","setOpen","handleClose","descriptionElementRef","descriptionElement","focus","IconButton","onClick","fontSize","Dialog","onClose","scroll","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","dividers","DialogContentText","tabIndex","List","ListItem","ListItemText","primary","body","img","maxWidth","buttons","button","textfields","HomePage","globalContext","useContext","Context","history","useHistory","undefined","roomCode","setRoomCode","username","setUsername","command","setCommand","errorMessage","setErrorMessage","customWords","setCustomWords","openCreateGame","setOpenCreateGame","openJoinGame","setOpenJoinGame","openError","setOpenError","icon","socket","emit","addRoomCode","addSocket","handleUsername","target","value","handleErrorOpen","goToRoom","event","a","preventDefault","length","usernameTaken","invalidRoom","io","connect","process","PORT","room","Promise","resolve","once","data","users","updateMyInfo","updateUsers","push","error","variant","src","alt","Button","size","onSubmit","TextField","label","onChange","FormControlLabel","control","Checkbox","checked","name","DialogActions","type","handleRoomCode","avatars","format","flexFlow","alignContent","LobbyUsers","handleUserUpdate","on","off","Object","values","map","user","Avatar","ready","textAlign","background","textContent","float","overflow","padding","marginTop","LobbyPage","isReady","setIsReady","message","setMessage","handleRoomUsers","keys","handleReady","alert","Board","socketRef","w","h","createMuiTheme","palette","main","amber","secondary","typography","fontFamily","join","h1","subtitle1","fontWeight","props","MuiButton","disableElevation","overrides","textTransform","containedPrimary","backgroundColor","containedSecondary","grey","MuiCssBaseline","MuiDialog","paper","borderWidth","borderStyle","MuiDialogContent","borderTop","borderBottom","MuiOutlinedInput","MuiInputLabel","MuiCheckbox","MuiAvatar","ADD_SOCKET","ADD_ROOM_CODE","UPDATE_USERS","UPDATE_MY_INFO","UPDATE_CUSTOM_WORDS","pictureImperfectReducer","state","action","myInfo","updateCustomWords","GlobalState","children","useReducer","appState","dispatch","Provider","App","ThemeProvider","CssBaseline","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44dc77c4.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default React.createContext()\r\n","import React, { useRef, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    flexDirection: 'column',\r\n  },\r\n  canvas: {\r\n    height: '100px',\r\n    width: '100px',\r\n    borderRadius: '100px',\r\n    border: '3px solid',\r\n    borderColor: 'black',\r\n  },\r\n  text: {\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nexport default function IconBoard({ setIcon }) {\r\n  const classes = useStyles()\r\n  const canvasRef = useRef(null)\r\n\r\n  useEffect(() => {\r\n    // --------------- getContext() method returns a drawing canvesContext on the canvas-----\r\n\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext('2d')\r\n\r\n    // ----------------------- Colors --------------------------------------------------\r\n\r\n    const current = {\r\n      color: 'black',\r\n    }\r\n\r\n    let drawing = false\r\n\r\n    // ------------------------------- create the drawing ----------------------------\r\n\r\n    const drawLine = (x0, y0, x1, y1) => {\r\n      const bounds = canvas.getBoundingClientRect()\r\n      let mousex0 = x0\r\n      let mousex1 = x1\r\n      let mousey0 = y0\r\n      let mousey1 = y1\r\n\r\n      mousex0 -= bounds.left\r\n      mousex1 -= bounds.left\r\n      mousey0 -= bounds.top\r\n      mousey1 -= bounds.top\r\n\r\n      mousex0 /= bounds.width\r\n      mousex1 /= bounds.width\r\n      mousey0 /= bounds.height\r\n      mousey1 /= bounds.height\r\n\r\n      mousex0 *= canvas.width\r\n      mousex1 *= canvas.width\r\n      mousey0 *= canvas.height\r\n      mousey1 *= canvas.height\r\n\r\n      context.beginPath()\r\n      context.moveTo(mousex0, mousey0)\r\n      context.lineTo(mousex1, mousey1)\r\n      context.lineWidth = 30\r\n      context.stroke()\r\n      context.closePath()\r\n\r\n      const dataURL = canvas.toDataURL('image/png')\r\n      setIcon(dataURL)\r\n    }\r\n\r\n    // ---------------- mouse movement --------------------------------------\r\n\r\n    const onMouseDown = (e) => {\r\n      drawing = true\r\n      current.x = e.clientX || e.touches[0].clientX\r\n      current.y = e.clientY || e.touches[0].clientY\r\n    }\r\n\r\n    const onMouseMove = (e) => {\r\n      console.log('on mouse move')\r\n      if (!drawing) {\r\n        return\r\n      }\r\n      drawLine(\r\n        current.x,\r\n\r\n        current.y,\r\n\r\n        e.clientX || e.touches[0].clientX,\r\n\r\n        e.clientY || e.touches[0].clientY,\r\n      )\r\n      current.x = e.clientX || e.touches[0].clientX\r\n      current.y = e.clientY || e.touches[0].clientY\r\n    }\r\n\r\n    const onMouseUp = (e) => {\r\n      console.log('on mouse up')\r\n      if (!drawing) {\r\n        return\r\n      }\r\n      drawing = false\r\n      drawLine(\r\n        current.x,\r\n\r\n        current.y,\r\n\r\n        e.clientX || e.changedTouches[0].clientX,\r\n\r\n        e.clientY || e.changedTouches[0].clientY,\r\n      )\r\n    }\r\n\r\n    // ----------- limit the number of events per second -----------------------\r\n\r\n    const throttle = (callback, delay) => {\r\n      let previousCall = new Date().getTime()\r\n      return function () {\r\n        const time = new Date().getTime()\r\n        if (time - previousCall >= delay) {\r\n          previousCall = time\r\n          // eslint-disable-next-line\r\n          callback.apply(null, arguments)\r\n        }\r\n      }\r\n    }\r\n\r\n    // -----------------add event listeners to our canvas ----------------------\r\n\r\n    canvas.addEventListener('mousedown', onMouseDown, false)\r\n    canvas.addEventListener('mouseup', onMouseUp, false)\r\n    canvas.addEventListener('mouseout', onMouseUp, false)\r\n    canvas.addEventListener('mousemove', throttle(onMouseMove, 10), false)\r\n\r\n    // Touch support for mobile devices\r\n    canvas.addEventListener('touchstart', onMouseDown, false)\r\n    canvas.addEventListener('touchend', onMouseUp, false)\r\n    canvas.addEventListener('touchcancel', onMouseUp, false)\r\n    canvas.addEventListener('touchmove', throttle(onMouseMove, 10), false)\r\n\r\n    // -------------- make the canvas fill its parent component -----------------\r\n\r\n    const onResize = () => {\r\n      canvas.width = window.innerWidth\r\n      canvas.height = window.innerHeight\r\n      canvas.style.width = '100%' // Note you must post fix the unit type %,px,em\r\n      canvas.style.height = '100%'\r\n    }\r\n\r\n    window.addEventListener('resize', onResize, false)\r\n    onResize()\r\n  }, [])\r\n\r\n  // ------------- The Canvas --------------------------\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography className={classes.text}>Please draw your icon : )</Typography>\r\n      <div className={classes.canvas}>\r\n        <canvas ref={canvasRef} aria-label=\"canvas\" />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nIconBoard.propTypes = {\r\n  setIcon: PropTypes.func.isRequired,\r\n}\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport HelpOutlineIcon from '@material-ui/icons/HelpOutline'\r\nimport DialogTitle from '@material-ui/core/DialogTitle'\r\nimport DialogContent from '@material-ui/core/DialogContent'\r\nimport DialogContentText from '@material-ui/core/DialogContentText'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport CloseIcon from '@material-ui/icons/Close'\r\nimport List from '@material-ui/core/List'\r\nimport ListItem from '@material-ui/core/ListItem'\r\nimport ListItemText from '@material-ui/core/ListItemText'\r\nimport Dialog from '@material-ui/core/Dialog'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  rules: {\r\n    position: 'absolute',\r\n    top: 10,\r\n    right: 10,\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: 'black',\r\n  },\r\n  helpButton: {\r\n    color: 'black',\r\n  },\r\n  dialog: {\r\n    margin: theme.spacing(1),\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n}))\r\n\r\nexport default function Rules() {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = useState(false)\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n\r\n  const descriptionElementRef = useRef(null)\r\n  useEffect(() => {\r\n    if (open) {\r\n      const { current: descriptionElement } = descriptionElementRef\r\n      if (descriptionElement !== null) {\r\n        descriptionElement.focus()\r\n      }\r\n    }\r\n  }, [open])\r\n\r\n  return (\r\n    <div>\r\n      <IconButton aria-label=\"rules\" className={classes.rules} onClick={handleClickOpen}>\r\n        <HelpOutlineIcon className={classes.helpButton} fontSize=\"large\" />\r\n      </IconButton>\r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        scroll=\"paper\"\r\n        aria-labelledby=\"scroll-dialog-title\"\r\n        aria-describedby=\"scroll-dialog-description\"\r\n      >\r\n        <DialogTitle id=\"scroll-dialog-title\">\r\n          Rules\r\n          {open ? (\r\n            <IconButton aria-label=\"close\" className={classes.closeButton} onClick={handleClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          ) : null}\r\n        </DialogTitle>\r\n        <DialogContent dividers>\r\n          <DialogContentText\r\n            id=\"scroll-dialog-description\"\r\n            ref={descriptionElementRef}\r\n            tabIndex={-1}\r\n          >\r\n            <List aria-label=\"rule-list\">\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\"1. At the beginning of each round, the players are split into two teams and one judge. In\r\n          the case of a game having an even number of players, there will be two judges.\"\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\"2. For games with 5 people and less, each draw-er in a round is given a number. For games with\r\n          more than 5 people, members of each team are given numbers both beginning at 1. \"\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\"3. Each team will receive a word that is different from the other team’s word. The judge(s) do not\r\n          know the words.\"\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\"4. When the timer begins, both teams have 60 seconds to draw a picture of\r\n          their word on a canvas that the other team shares. Members in the game draw when their\r\n          number is called. \"\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\" 5. The judges have infinite guesses and can keep guessing within the\r\n          time limit until they get it right. \"\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText\r\n                  primary=\" 6.If a judge guesses a team’s word, the members of the\r\n          team that had the word and the judge who guessed the word all receive a point.\"\r\n                />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText primary=\"7.Each round the teams change as the judges are rotated in to be players\" />\r\n              </ListItem>\r\n              <ListItem>\r\n                <ListItemText primary=\"8.The first player to reach the number of points that is chosen at the beginning of the game first wins the game.\" />\r\n              </ListItem>\r\n            </List>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n      </Dialog>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useState, useEffect } from 'react'\nimport Button from '@material-ui/core/Button'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Checkbox from '@material-ui/core/Checkbox'\nimport TextField from '@material-ui/core/TextField'\nimport Typography from '@material-ui/core/Typography'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport { useHistory } from 'react-router-dom'\nimport io from 'socket.io-client'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport DialogActions from '@material-ui/core/DialogActions'\nimport Dialog from '@material-ui/core/Dialog'\nimport { makeStyles } from '@material-ui/core/styles'\nimport Context from '../../context/context'\nimport IconBoard from './IconBoard'\nimport Rules from '../reusable/Rules'\n\n// import PORT from '../../../server/index'\n\n// git push heroku heroku-deployment:main\n\nconst useStyles = makeStyles((theme) => ({\n  body: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n    height: '100vh',\n  },\n  dialog: {\n    display: 'flex',\n    justifyContent: 'center',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  img: {\n    maxWidth: '192px',\n  },\n  buttons: {\n    margin: theme.spacing(5),\n  },\n  button: {\n    margin: theme.spacing(2),\n  },\n  textfields: {\n    margin: theme.spacing(2),\n  },\n}))\n\nexport default function HomePage() {\n  const classes = useStyles()\n  const globalContext = useContext(Context)\n  const history = useHistory()\n  const [roomCode, setRoomCode] = useState(undefined)\n  const [username, setUsername] = useState(undefined)\n  const [command, setCommand] = useState(undefined)\n  const [errorMessage, setErrorMessage] = useState('')\n  const [customWords, setCustomWords] = useState(false)\n  const [openCreateGame, setOpenCreateGame] = useState(false)\n  const [openJoinGame, setOpenJoinGame] = useState(false)\n  const [openError, setOpenError] = useState(false)\n  const [icon, setIcon] = useState('')\n\n  // if they are in a room right now remove them from the room\n  useEffect(() => {\n    if (globalContext.roomCode) {\n      globalContext.socket.emit('disconnect')\n      globalContext.addRoomCode(undefined, globalContext)\n      globalContext.addSocket(undefined, globalContext)\n    }\n  }, [])\n\n  // Room handlers\n  const handleRoomCode = (e) => {\n    setRoomCode(e.target.value)\n  }\n\n  const handleCreateGameOpen = () => {\n    setCommand('createRoom')\n    setOpenCreateGame(true)\n  }\n\n  const handleCreateGameClose = () => {\n    setCommand('')\n    setOpenCreateGame(false)\n  }\n\n  const handleJoinGameOpen = () => {\n    setCommand('joinRoom')\n    setOpenJoinGame(true)\n  }\n\n  const handleJoinGameClose = () => {\n    setCommand('')\n    setOpenJoinGame(false)\n  }\n\n  // Username handlers\n  const handleUsername = (e) => {\n    setUsername(e.target.value)\n  }\n\n  const handleErrorOpen = () => {\n    setOpenError(true)\n  }\n\n  const handleErrorClose = () => {\n    setOpenError(false)\n  }\n\n  const goToRoom = async (event) => {\n    event.preventDefault()\n    if ((roomCode === undefined || roomCode.length < 1) && command === 'joinRoom') {\n      // Throw error if they dont input a room code\n      setErrorMessage('Please input a room code!')\n      handleErrorOpen()\n    } else if (username === undefined || username.length < 1) {\n      setErrorMessage('Please enter a username!')\n      handleErrorOpen()\n    } else {\n      try {\n        let room\n        let socket\n        let users\n        let usernameTaken = false\n        let invalidRoom = false\n        if (!globalContext.socket) {\n          socket = io.connect(`ws://localhost:${process.env.PORT || 8080}`)\n          // socket = io.connect('ws://localhost:8080')\n          console.log('HEREEEEE')\n          globalContext.addSocket(socket, globalContext)\n        } else {\n          socket = globalContext.socket\n        }\n        if (command === 'createRoom') {\n          socket.emit(command, { username, customWords, icon })\n        } else if (command === 'joinRoom') {\n          socket.emit('joinRoom', { username, room: roomCode, icon })\n        }\n\n        await new Promise((resolve) => {\n          socket.once('invalidRoomCode', async (data) => {\n            invalidRoom = true\n            setErrorMessage(data)\n            handleErrorOpen()\n            resolve(data)\n          })\n          socket.once('invalidUsername', async (data) => {\n            usernameTaken = true\n            setErrorMessage(data)\n            handleErrorOpen()\n            resolve(data)\n          })\n          socket.once('roomUsers', async (data) => {\n            room = data.room\n            users = data.users\n            resolve(data)\n          })\n        })\n\n        if (!usernameTaken && !invalidRoom) {\n          globalContext.updateMyInfo({ username, icon }, globalContext)\n          globalContext.updateUsers(users, globalContext)\n          globalContext.addRoomCode(room, globalContext)\n          history.push('/lobby')\n        }\n      } catch (error) {\n        console.error(error)\n      }\n    }\n  }\n\n  const handleCustomWords = (event) => {\n    setCustomWords(event.target.checked)\n  }\n\n  return (\n    <div className={classes.body}>\n      <Rules />\n      <Typography variant=\"h1\">Picture</Typography>\n\n      <img className={classes.img} src=\"/logo192.png\" alt=\"logo\" />\n\n      <Typography variant=\"h1\">Imperfect</Typography>\n\n      <span className={classes.buttons}>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          onClick={handleCreateGameOpen}\n        >\n          Create Game\n        </Button>\n\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"large\"\n          onClick={handleJoinGameOpen}\n        >\n          Join Game\n        </Button>\n      </span>\n\n      <Dialog\n        onClose={handleErrorClose}\n        aria-labelledby=\"error\"\n        open={openError}\n        className={classes.dialog}\n      >\n        <DialogTitle>{errorMessage}</DialogTitle>\n      </Dialog>\n\n      <Dialog onClose={handleCreateGameClose} aria-labelledby=\"create-game\" open={openCreateGame}>\n        <form onSubmit={goToRoom}>\n          <DialogTitle id=\"create-game-title\">Create Game</DialogTitle>\n          <DialogContent dividers className={classes.dialog}>\n            <div className={classes.textfields}>\n              <IconBoard setIcon={setIcon} />\n            </div>\n            <TextField\n              label=\"Enter username\"\n              variant=\"outlined\"\n              onChange={(e) => handleUsername(e)}\n              className={classes.textfields}\n            />\n            <FormControlLabel\n              /* eslint-disable */\n              control={\n                <Checkbox\n                  checked={customWords}\n                  onChange={handleCustomWords}\n                  color=\"primary\"\n                  name=\"custom-words-checkbox\"\n                />\n              }\n              /* eslint-disable */\n              label=\"Add your own custom words?\"\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Create Game\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n\n      <Dialog onClose={handleJoinGameClose} aria-labelledby=\"join-game\" open={openJoinGame}>\n        <form onSubmit={goToRoom}>\n          <DialogTitle id=\"create-game-title\">Join Game</DialogTitle>\n          <DialogContent dividers className={classes.dialog}>\n            <div className={classes.textfields}>\n              <IconBoard setIcon={setIcon} />\n            </div>\n            <TextField\n              label=\"Enter room code\"\n              variant=\"outlined\"\n              className={classes.textfields}\n              onChange={(e) => handleRoomCode(e)}\n            />\n\n            <TextField\n              label=\"Enter nickname\"\n              variant=\"outlined\"\n              className={classes.textfields}\n              onChange={(e) => handleUsername(e)}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n              Join Game\n            </Button>\n          </DialogActions>\n        </form>\n      </Dialog>\n    </div>\n  )\n}\n","import React, { useContext, useEffect } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Avatar from '@material-ui/core/Avatar'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Context from '../../context/context'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  avatars: {\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n    margin: theme.spacing(5),\r\n  },\r\n  format: {\r\n    display: 'flex',\r\n    flexFlow: 'row wrap',\r\n    justifyContent: 'center',\r\n    // flexDirection: 'row',\r\n    alignItems: 'center',\r\n    alignContent: 'center',\r\n    height: '100%',\r\n  },\r\n}))\r\n\r\nexport default function LobbyUsers() {\r\n  const classes = useStyles()\r\n  const globalContext = useContext(Context)\r\n  const { socket } = globalContext\r\n\r\n  const handleUserUpdate = (data) => {\r\n    const { users } = data\r\n    globalContext.updateUsers(users, globalContext)\r\n  }\r\n\r\n  useEffect(() => {\r\n    // if they arent in a room send them to the homepage\r\n    // subscribe to socket events\r\n    socket.on('roomUsers', handleUserUpdate)\r\n\r\n    return () => {\r\n      // before the component is destroyed\r\n      // unbind all event handlers used in this component\r\n      socket.off('roomUsers', handleUserUpdate)\r\n    }\r\n  }, [socket, handleUserUpdate])\r\n\r\n  return (\r\n    <div className={classes.format}>\r\n      {Object.values(globalContext.users).map((user) => {\r\n        return (\r\n          <div className={classes.avatars}>\r\n            <Avatar src={user.icon ? user.icon : '/logo192.png'} alt={user.username} />\r\n            <Typography variant=\"subtitle1\">{user.username}</Typography>\r\n            <Typography variant=\"subtitle1\">\r\n              {user.ready ? 'LET ME INNNNNNNNNN' : 'HOLD THE F*CKING PHONE!!'}\r\n            </Typography>\r\n          </div>\r\n        )\r\n      })}\r\n    </div>\r\n  )\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nimport Context from '../../context/context'\r\nimport LobbyUsers from './LobbyUsers'\r\nimport Rules from '../reusable/Rules'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n    textAlign: 'center',\r\n  },\r\n  textfields: {\r\n    margin: theme.spacing(2),\r\n    background: '#B2DAFF',\r\n    borderRadius: '5px',\r\n  },\r\n  textContent: {\r\n    float: 'left',\r\n    width: '30%',\r\n    // border: '5px solid black',\r\n    background: 'white',\r\n    height: '100vh',\r\n    overflow: 'auto',\r\n    // marginTop: theme.spacing(15),\r\n    display: 'flex',\r\n    flexFlow: 'column nowrap',\r\n    justifyContent: 'center',\r\n    // flexDirection: 'row',\r\n    alignItems: 'center',\r\n    alignContent: 'center',\r\n  },\r\n  roomCode: {\r\n    position: 'absolute',\r\n    top: 0,\r\n    left: 0,\r\n    background: '#B2DAFF',\r\n    border: '3px solid black',\r\n    borderRadius: '5px',\r\n    margin: theme.spacing(2),\r\n    padding: theme.spacing(1),\r\n  },\r\n  users: {\r\n    float: 'right',\r\n    width: '70%',\r\n    // border: '5px solid black',\r\n    height: '80vh',\r\n    overflow: 'auto',\r\n    marginTop: theme.spacing(15),\r\n  },\r\n}))\r\n\r\nexport default function LobbyPage() {\r\n  const classes = useStyles()\r\n  const history = useHistory()\r\n  const globalContext = useContext(Context)\r\n  const [isReady, setIsReady] = useState(false)\r\n  const [message, setMessage] = useState('')\r\n\r\n  const handleRoomUsers = (data) => {\r\n    if (Object.keys(data.users).length < 3) {\r\n      setMessage('You need at least 3 players to start!')\r\n    } else {\r\n      setMessage('')\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (!globalContext.roomCode || !globalContext.socket) {\r\n      history.push('/')\r\n    }\r\n\r\n    globalContext.socket.once('everyoneReady', () => {\r\n      console.log('starting game')\r\n      history.push('/game')\r\n    })\r\n\r\n    globalContext.socket.on('roomUsers', handleRoomUsers)\r\n\r\n    return () => {\r\n      // before the component is destroyed\r\n      // unbind all event handlers used in this component\r\n      globalContext.socket.off('roomUsers', handleRoomUsers)\r\n    }\r\n  }, [])\r\n\r\n  const handleReady = async (event) => {\r\n    event.preventDefault()\r\n    try {\r\n      // console.log(globalContext.myInfo.username)\r\n      console.log('socket id', globalContext.socket.id)\r\n      if (isReady) {\r\n        globalContext.socket.emit('notReady', globalContext.socket.id)\r\n      } else {\r\n        globalContext.socket.emit('ready', globalContext.socket.id)\r\n      }\r\n\r\n      await new Promise((resolve) => {\r\n        globalContext.socket.once('roomUsers', async (data) => {\r\n          resolve(data)\r\n        })\r\n      })\r\n\r\n      setIsReady(!isReady)\r\n    } catch (error) {\r\n      console.error(error)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Rules />\r\n      <div className={classes.textContent}>\r\n        <Typography>{message}</Typography>\r\n        <Typography variant=\"h4\" className={classes.roomCode}>\r\n          Roomcode:\r\n          {'  '}\r\n          {globalContext.roomCode}\r\n        </Typography>\r\n        {globalContext.customWords && (\r\n          <TextField\r\n            label=\"Enter custom words\"\r\n            variant=\"outlined\"\r\n            onChange={() => alert('add Custom Words')}\r\n            className={classes.textfields}\r\n          />\r\n        )}\r\n        <Typography variant=\"h5\" className={classes.margin}>\r\n          Game starts when everyone is ready\r\n        </Typography>\r\n        <Button\r\n          className={classes.margin}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          onClick={handleReady}\r\n        >\r\n          {isReady ? `I'm no longer ready :(` : `I'm ready`}\r\n        </Button>\r\n        <Typography variant=\"h6\" className={classes.margin}>\r\n          {Object.values(globalContext.users).length}\r\n          {'    '}\r\n          Players\r\n        </Typography>\r\n      </div>\r\n      <div className={classes.users}>{globalContext.socket && <LobbyUsers />}</div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useRef, useEffect, useContext } from 'react'\r\n// import io from 'socket.io-client'\r\nimport Context from '../../context/context'\r\n\r\nconst Board = () => {\r\n  const globalContext = useContext(Context)\r\n  const canvasRef = useRef(null)\r\n  const socketRef = useRef()\r\n\r\n  useEffect(() => {\r\n    // --------------- getContext() method returns a drawing canvesContext on the canvas-----\r\n\r\n    const canvas = canvasRef.current\r\n    const context = canvas.getContext('2d')\r\n\r\n    // ----------------------- Colors --------------------------------------------------\r\n\r\n    // set the current color\r\n    const current = {\r\n      color: 'black',\r\n    }\r\n\r\n    let drawing = false\r\n\r\n    // ------------------------------- create the drawing ----------------------------\r\n\r\n    const drawLine = (x0, y0, x1, y1, emit) => {\r\n      context.beginPath()\r\n      context.moveTo(x0, y0)\r\n      context.lineTo(x1, y1)\r\n      context.lineWidth = 3\r\n      context.stroke()\r\n      context.closePath()\r\n\r\n      if (!emit) {\r\n        return\r\n      }\r\n      const w = canvas.width\r\n      const h = canvas.height\r\n\r\n      socketRef.current.emit('drawing', {\r\n        x0: x0 / w,\r\n        y0: y0 / h,\r\n        x1: x1 / w,\r\n        y1: y1 / h,\r\n      })\r\n    }\r\n\r\n    // ---------------- mouse movement --------------------------------------\r\n\r\n    const onMouseDown = (e) => {\r\n      drawing = true\r\n      current.x = e.clientX || e.touches[0].clientX\r\n      current.y = e.clientY || e.touches[0].clientY\r\n    }\r\n\r\n    const onMouseMove = (e) => {\r\n      if (!drawing) {\r\n        return\r\n      }\r\n      drawLine(\r\n        current.x,\r\n\r\n        current.y,\r\n\r\n        e.clientX || e.touches[0].clientX,\r\n\r\n        e.clientY || e.touches[0].clientY,\r\n\r\n        true,\r\n      )\r\n      current.x = e.clientX || e.touches[0].clientX\r\n      current.y = e.clientY || e.touches[0].clientY\r\n    }\r\n\r\n    const onMouseUp = (e) => {\r\n      if (!drawing) {\r\n        return\r\n      }\r\n      drawing = false\r\n      drawLine(\r\n        current.x,\r\n\r\n        current.y,\r\n\r\n        e.clientX || e.changedTouches[0].clientX,\r\n\r\n        e.clientY || e.changedTouches[0].clientY,\r\n\r\n        true,\r\n      )\r\n    }\r\n\r\n    // ----------- limit the number of events per second -----------------------\r\n\r\n    const throttle = (callback, delay) => {\r\n      let previousCall = new Date().getTime()\r\n      return function () {\r\n        const time = new Date().getTime()\r\n        if (time - previousCall >= delay) {\r\n          previousCall = time\r\n          // eslint-disable-next-line\r\n          callback.apply(null, arguments)\r\n        }\r\n      }\r\n    }\r\n\r\n    // -----------------add event listeners to our canvas ----------------------\r\n\r\n    canvas.addEventListener('mousedown', onMouseDown, false)\r\n    canvas.addEventListener('mouseup', onMouseUp, false)\r\n    canvas.addEventListener('mouseout', onMouseUp, false)\r\n    canvas.addEventListener('mousemove', throttle(onMouseMove, 10), false)\r\n\r\n    // Touch support for mobile devices\r\n    canvas.addEventListener('touchstart', onMouseDown, false)\r\n    canvas.addEventListener('touchend', onMouseUp, false)\r\n    canvas.addEventListener('touchcancel', onMouseUp, false)\r\n    canvas.addEventListener('touchmove', throttle(onMouseMove, 10), false)\r\n\r\n    // -------------- make the canvas fill its parent component -----------------\r\n\r\n    const onResize = () => {\r\n      canvas.width = window.innerWidth\r\n      canvas.height = window.innerHeight\r\n    }\r\n\r\n    window.addEventListener('resize', onResize, false)\r\n    onResize()\r\n\r\n    // ----------------------- socket.io connection ----------------------------\r\n    const onDrawingEvent = (data) => {\r\n      const w = canvas.width\r\n      const h = canvas.height\r\n      drawLine(data.x0 * w, data.y0 * h, data.x1 * w, data.y1 * h, data.color)\r\n    }\r\n\r\n    socketRef.current = globalContext.socket\r\n    socketRef.current.on('drawing', onDrawingEvent)\r\n  }, [])\r\n\r\n  // ------------- The Canvas --------------------------\r\n\r\n  return (\r\n    <div>\r\n      <canvas ref={canvasRef} aria-label=\"canvas\" />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board\r\n","import { createMuiTheme } from '@material-ui/core'\r\nimport { amber, grey } from '@material-ui/core/colors'\r\n\r\nconst babyBlue = '#B2DAFF'\r\nconst cgRed = '#BF211E'\r\nconst white = '#FFFFFF'\r\n\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      main: amber[200],\r\n    },\r\n    secondary: {\r\n      main: white,\r\n    },\r\n    error: {\r\n      main: cgRed,\r\n    },\r\n  },\r\n  text: {\r\n    primary: '#000',\r\n  },\r\n  typography: {\r\n    fontFamily: ['Raleway', 'sans-serif'].join(','),\r\n    h1: {\r\n      fontFamily: ['Ribeye', 'cursive'].join(','),\r\n    },\r\n    subtitle1: {\r\n      fontWeight: 500,\r\n    },\r\n  },\r\n})\r\n\r\ntheme.props = {\r\n  MuiButton: {\r\n    disableElevation: true,\r\n  },\r\n  // MuiInputLabel: {\r\n  //   shrink: false,\r\n  // },\r\n}\r\n\r\ntheme.overrides = {\r\n  MuiButton: {\r\n    root: {\r\n      textTransform: 'none',\r\n      border: '3px solid',\r\n      borderColor: '#000',\r\n    },\r\n    containedPrimary: {\r\n      '&:hover': {\r\n        backgroundColor: amber[400],\r\n      },\r\n    },\r\n    containedSecondary: {\r\n      '&:hover': {\r\n        backgroundColor: grey[200],\r\n      },\r\n    },\r\n  },\r\n  MuiCssBaseline: {\r\n    '@global': {\r\n      body: {\r\n        backgroundColor: babyBlue,\r\n      },\r\n    },\r\n  },\r\n  MuiDialog: {\r\n    paper: {\r\n      borderWidth: 3,\r\n      borderRadius: 3,\r\n      borderColor: '#000',\r\n      borderStyle: 'solid',\r\n    },\r\n  },\r\n  MuiDialogContent: {\r\n    dividers: {\r\n      borderTop: '3px solid',\r\n      borderBottom: '3px solid',\r\n      borderColor: '#000',\r\n    },\r\n  },\r\n  MuiOutlinedInput: {\r\n    root: {\r\n      '& $notchedOutline': {\r\n        borderColor: '#000',\r\n      },\r\n      '&:hover $notchedOutline': {\r\n        border: '3px solid',\r\n        borderColor: '#000',\r\n      },\r\n      '&$focused $notchedOutline': {\r\n        borderColor: '#000',\r\n      },\r\n    },\r\n  },\r\n  MuiInputLabel: {\r\n    root: {\r\n      color: 'black',\r\n      '&$focused': {\r\n        color: '#000',\r\n      },\r\n    },\r\n  },\r\n  MuiCheckbox: {\r\n    root: {\r\n      color: 'black',\r\n    },\r\n  },\r\n  MuiAvatar: {\r\n    root: {\r\n      width: '80px',\r\n      height: '80px',\r\n      border: '3px solid black',\r\n      background: 'white',\r\n    },\r\n  },\r\n}\r\nexport default theme\r\n","export const ADD_SOCKET = 'ADD_SOCKET'\r\nexport const ADD_ROOM_CODE = 'ADD_ROOM_CODE'\r\nexport const UPDATE_USERS = 'UPDATE_USERS'\r\nexport const UPDATE_MY_INFO = 'UPDATE_MY_INFO'\r\nexport const UPDATE_CUSTOM_WORDS = 'UPDATE_CUSTOM_WORDS'\r\n\r\nconst addSocket = (socket, state) => {\r\n  return { ...state, socket }\r\n}\r\n\r\nconst addRoomCode = (roomCode, state) => {\r\n  return { ...state, roomCode }\r\n}\r\n//  check if the spread is ok\r\nconst updateUsers = (users, state) => {\r\n  // console.log('current users in state: ', state.users)\r\n  // console.log('users: ', users)\r\n  // const updatedUsers = { ...state.users, ...users }\r\n  // console.log('new users ', updatedUsers)\r\n  return { ...state, users }\r\n}\r\n\r\nconst updateCustomWords = (customWords, state) => {\r\n  return { ...state, customWords }\r\n}\r\n\r\nconst updateMyInfo = (myInfo, state) => {\r\n  return { ...state, myInfo }\r\n}\r\n\r\nexport const pictureImperfectReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case ADD_SOCKET:\r\n      return addSocket(action.socket, state)\r\n    case ADD_ROOM_CODE:\r\n      return addRoomCode(action.roomCode, state)\r\n    case UPDATE_USERS:\r\n      return updateUsers(action.users, state)\r\n    case UPDATE_MY_INFO:\r\n      return updateMyInfo(action.myInfo, state)\r\n    case UPDATE_CUSTOM_WORDS:\r\n      return updateCustomWords(action.customWords, state)\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import React, { useReducer } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Context from './context'\r\nimport {\r\n  pictureImperfectReducer,\r\n  ADD_SOCKET,\r\n  ADD_ROOM_CODE,\r\n  UPDATE_USERS,\r\n  UPDATE_CUSTOM_WORDS,\r\n  UPDATE_MY_INFO,\r\n} from './reducers'\r\n\r\nconst GlobalState = (props) => {\r\n  const { children } = props\r\n  const [appState, dispatch] = useReducer(pictureImperfectReducer, {\r\n    socket: undefined,\r\n    roomCode: undefined,\r\n    users: {},\r\n    customWords: true,\r\n    myInfo: {},\r\n  })\r\n\r\n  const addSocket = (socket) => {\r\n    dispatch({ type: ADD_SOCKET, socket })\r\n  }\r\n\r\n  const addRoomCode = (roomCode) => {\r\n    dispatch({ type: ADD_ROOM_CODE, roomCode })\r\n  }\r\n\r\n  const updateUsers = (users) => {\r\n    dispatch({ type: UPDATE_USERS, users })\r\n  }\r\n\r\n  const updateMyInfo = (myInfo) => {\r\n    dispatch({ type: UPDATE_MY_INFO, myInfo })\r\n  }\r\n\r\n  const updateCustomWords = (customWords) => {\r\n    dispatch({ type: UPDATE_CUSTOM_WORDS, customWords })\r\n  }\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        socket: appState.socket,\r\n        addSocket,\r\n        roomCode: appState.roomCode,\r\n        addRoomCode,\r\n        users: appState.users,\r\n        updateUsers,\r\n        customWords: appState.customWords,\r\n        updateCustomWords,\r\n        myInfo: appState.myInfo,\r\n        updateMyInfo,\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\nexport default GlobalState\r\n\r\nGlobalState.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n}\r\n","import React from 'react'\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\nimport { ThemeProvider } from '@material-ui/core/styles'\r\nimport CssBaseline from '@material-ui/core/CssBaseline'\r\nimport HomePage from './components/home/HomePage'\r\nimport LobbyPage from './components/lobby/LobbyPage'\r\nimport Board from './components/game/Board'\r\nimport theme from './theme'\r\nimport GlobalState from './context/GlobalState'\r\n\r\nexport default function App() {\r\n  return (\r\n    <GlobalState>\r\n      <ThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Router>\r\n          <Switch>\r\n            <Route exact path=\"/gameOver\">\r\n              <h1>GameOver</h1>\r\n            </Route>\r\n            <Route exact path=\"/lobby\">\r\n              <LobbyPage />\r\n            </Route>\r\n            <Route exact path=\"/create\">\r\n              <h1>Create Game</h1>\r\n            </Route>\r\n            <Route exact path=\"/join\">\r\n              <h1>Join Game</h1>\r\n            </Route>\r\n            <Route exact path=\"/game\">\r\n              <Board />\r\n            </Route>\r\n            <Route exact path=\"/\">\r\n              <HomePage />\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </ThemeProvider>\r\n    </GlobalState>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport App from './App'\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n)\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n"],"sourceRoot":""}